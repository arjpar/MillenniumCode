name: Build Millennium Code

on:
  workflow_dispatch: # Manual trigger

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Fetch Latest Iosevka Release
        id: fetch-release
        run: |
          latest_release=$(curl -s https://api.github.com/repos/be5invis/Iosevka/releases/latest | jq -r .tag_name)
          echo "release=${latest_release}" >> $GITHUB_ENV

      - name: Clone Iosevka Source
        run: |
          git clone --depth=1 --branch ${release} https://github.com/be5invis/Iosevka.git $HOME/Iosevka

      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: /tmp/docker-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker Image
        run: |
          mkdir -p /tmp/docker-cache
          docker build --cache-from /tmp/docker-cache -t fontcc $HOME/Iosevka/docker

      - name: Cache Bun Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.bun
          key: ${{ runner.os }}-bun-${{ hashFiles('private-build-plans.toml') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Build Fonts
        run: |
          mkdir -p output
          docker run --rm \
            -v ${{ github.workspace }}:/work \
            fontcc ttf::custom-font
        env:
          VERSION_TAG: ${release}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "v${{ github.run_id }}" # Unique tag for the release
          release_name: "Millennium Code Release ${{ github.run_id }}"
          body: "Custom-built fonts from the latest Iosevka release (${release})."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Fonts to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/
          asset_name: Millennium_Code-Fonts.zip
          asset_content_type: application/zip

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Millennium_Code-Fonts
          path: dist/
